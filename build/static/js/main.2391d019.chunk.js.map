{"version":3,"sources":["config.js","auth/index.js","core/cartHelpers.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/ShowImage.js","core/Card.js","core/Search.js","core/apiCore.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","core/MenuAdmin.js","core/LayoutAdmin.js","core/ShowImage2.js","admin/apiAdmin.js","core/Detail.js","user/AdminDashboard.js","admin/AddCategory.js","admin/AddService.js","core/Card1.js","core/Service.js","core/ShowImage1.js","core/Card2.js","core/Checkout.js","core/Cart.js","admin/Orders.js","user/Profile.js","admin/ManageServices.js","admin/UpdateService.js","admin/updateCategory.js","user/AddDetail.js","user/AddContact.js","user/CreateDetails.js","core/CheckedDetails.js","core/Contact.js","user/GetMessage.js","core/thanksForthePayment.js","Routes.js","index.js"],"names":["API","process","signout","next","window","localStorage","removeItem","fetch","method","then","response","console","log","catch","err","isAuthenticated","getItem","JSON","parse","addItem","item","f","cart","push","count","Array","from","Set","map","s","_id","id","find","setItem","stringify","updateItem","serviceId","service","i","splice","isActive","history","path","location","pathname","color","withRouter","useState","setNavbar","addEventListener","scrollY","size","collapseOnSelect","className","expand","bg","variant","Brand","style","to","width","src","Toggle","aria-controls","Collapse","Link","length","user","role","eventKey","cursor","onClick","Layout","title","description","children","Signup","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","headers","Accept","body","json","data","display","onChange","type","placeholder","required","Signin","loading","redirectToReferrer","signin","authenticate","ShowImage","url","alt","Card","showViewServiceButton","showAddToCartButton","cartUpdate","showRemoveServiceButton","setRun","run","undefined","redirect","setRedirect","setCount","addToCart","shouldRedirect","showViewButton","showAddToCartBtn","substring","quantity","price","showRemoveButton","showCartUpdateOptions","Search","categories","category","search","results","searched","setData","loadCategories","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","onSubmit","c","key","border","searchedServices","Home","servicesByArrival","setServicesByArrival","loadServicesByArrival","sortBy","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","services","purchaseHistory","AdminRoute","paddingTop","paddingBottom","LayoutAdmin","ShowImage2","maxHeight","maxWidth","getCategories","getDetails","getContacts","Detail","detail","detailsByUsers","setDetailsByUsers","setError","phone","moment","createdAt","fromNow","AdminDashboard","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","AddService","shipping","photo","createdService","redirectToProfile","formData","FormData","files","set","createService","accept","redirectUser","Card1","Service","setService","relatedService","setRelatedService","loadSingleService","read","listRelated","match","ShowImage1","Checkout","clientToken","instance","address","redirectTothanksForthePayment","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","align","redirectthanksForthePayment","Cart","items","setItems","Card2","showItems","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","sIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","ManageServices","setServices","loadServices","destroy","deleteService","UpdateService","setCategories","getService","initCategories","updateService","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","AddDetail","createdDetail","createDetail","redirectDashboard","AddContact","text","createdContact","contacts","contact","createContact","CreateDetails","CheckedDetails","GetMessage","contactsByUsers","setContactsByUsers","thanksForthePayment","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2391d019.chunk.js","sourcesContent":["// export const API = process.env.REACT_APP_API_URL;\nexport const API = process.env.REACT_APP_API_URL;\n// process.env.REACT_APP_API_URL\n\n","import { API } from '../config';\n\nexport const signup = user => {\n    return fetch(`${API}/signup`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const signin = user => {\n    return fetch(`${API}/signin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const authenticate = (data, next) => {\n    if (typeof window !== 'undefined') {\n        localStorage.setItem('jwt', JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('jwt');\n        next();\n        return fetch(`${API}/signout`, {\n            method: 'GET'\n        })\n            .then(response => {\n                console.log('signout', response);\n            })\n            .catch(err => console.log(err));\n    }\n};\n\nexport const isAuthenticated = () => {\n    if (typeof window == 'undefined') {\n        return false;\n    }\n    if (localStorage.getItem('jwt')) {\n        return JSON.parse(localStorage.getItem('jwt'));\n    } else {\n        return false;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { API } from \"../config\";\n\n\n\n// export const signup =(user) => {\n\n//   // to get in console\n//   // console.log(name, email, password)\n\n//   // send data to backend as JSON\n\n//   return fetch(`${API}/signup`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: 'application/json',\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//   .then(response => {\n//     return response.json();\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   })\n// }\n\n\n// export const signin =(user) => {\n\n//   // to get in console\n//   // console.log(name, email, password)\n\n//   // send data to backend as JSON\n\n//   return fetch(`${API}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: 'application/json',\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//   })\n//   .then(response => {\n//     return response.json();\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   })\n// }\n\n\n// export const authenticate = (data, next) => {\n//   if(typeof window !== 'undefined') {\n//     localStorage.setItem('jwt', JSON.stringify(data))\n//     next()\n//   }\n// }\n\n\n// export const signout = (next) => {\n//   if(typeof window !== 'undefined') {\n//     localStorage.removeItem('jwt')\n//     next()\n//     return fetch(`${API}/signout`, {\n//       method: \"GET\",\n\n//     })\n//     .then(response => {\n//       console.log('signout', response)\n//     })\n//     .catch(err => console.log(err))\n//   }\n// }\n\n\n// export const isAuthenticated = () => {\n//   if(typeof window == 'undefined') {\n//     return false\n//   }\n//   if (localStorage.getItem('jwt')) {\n//     return JSON.parse(localStorage.getItem('jwt'))\n//   }else {\n//     return false\n//   }\n// }","export const addItem = (item = [],count = 0,  next = f => f) => {\n    let cart = []\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item, \n            count: 1\n        });\n\n        // remove duplicates \n        // build an Array from new Set and turn it back into array using Array. from\n        // so that later we can re-map it\n        // new set will only allow unique values in it \n        // so pass the ids of each object/service\n        // if the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual service from the cart\n\n        cart = Array.from(new Set(cart.map((s) => (s._id)))).map(id => {\n            return cart.find(s => s._id === id );\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\n\n\nexport const itemTotal = () => {\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length\n        }\n\n    }\n    return 0;\n};\n\n\nexport const getCart = () => {\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n\n    }\n    return [];\n};\n\n\n\n\nexport const updateItem = (serviceId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((service, i) => {\n            if (service._id === serviceId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = serviceId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((service, i) => {\n            if (service._id === serviceId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from './cartHelpers'\nimport '../App.css';\nimport * as ReactBootStrap from 'react-bootstrap'\n\n\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#000\" };\n    } else {\n        return { color: \"#479438\" }\n    }\n};\n\n\n\n// scroll navbar\nconst Menu = ({ history }) => {\n    const [navbar, setNavbar] = useState(false);\n\n    const changeBackground = () => {\n        if (window.scrollY >= 70 && window.size > 600) {\n            setNavbar(true);\n        } else {\n            setNavbar(false)\n        }\n    }\n\n\n\n    window.addEventListener('scroll', changeBackground)\n    return (\n\n\n        <ReactBootStrap.Navbar collapseOnSelect className=\"jcol1 fixed-top n\" expand=\"sm\" bg=\"dark\" variant=\"dark\">\n            <ReactBootStrap.Navbar.Brand >\n                <Link className=\"nav-brand logo12 ml-3 mb-3\" style={{ color: '#000' }} to=\"/\">\n                    <img className=\"logo12\" style={{ width: \"160px\" }} src=\"https://svgshare.com/i/QV9.svg\" />\n\n                </Link>\n            </ReactBootStrap.Navbar.Brand>\n            <ReactBootStrap.Navbar.Toggle className=\"tcol text-center\" aria-controls=\"responsive-navbar-nav\" />\n            <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                <ReactBootStrap.Nav className=\"mr-auto\">\n                    <ReactBootStrap.Nav.Link >\n                        <div className=\"nav-item l2\" >\n                            <Link className=\"nav-link ml-5\" style={isActive(history, \"/\")} to=\"/\">\n                               <i className=\"fa fa-home\"></i>\n                            </Link>\n                        </div>\n                    </ReactBootStrap.Nav.Link>\n                    <ReactBootStrap.Nav.Link >\n                        <div className=\"nav-item ml-3 l2\" >\n                            <Link\n                                className=\"nav-link pull-right\"\n                                style={isActive(history, \"/cart\")}\n                                to=\"/cart\"\n\n                            >\n                                <i className='fas fa-shopping-cart' ></i>\n\n                                <sup><smal className=\"cart-badge1\"> {itemTotal()}</smal></sup>\n                            </Link>\n                        </div>\n                    </ReactBootStrap.Nav.Link>\n\n                </ReactBootStrap.Nav>\n                <ReactBootStrap.Nav>\n                    <ReactBootStrap.Nav.Link >\n                        {/* <div> */}\n                        {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                            <div className=\"nav-item l1\" >\n                                <Link\n                                    className=\"nav-link\"\n                                    style={isActive(history, \"/user/dashboard\")}\n                                    to=\"/user/dashboard\"\n                                >\n                                    Dashboard\n                                </Link>\n                            </div>\n                        )}\n                        {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                            <div className=\"nav-item l1\" >\n                                <Link\n                                    className=\"nav-link\"\n                                    style={isActive(history, \"/admin/dashboard\")}\n                                    to=\"/admin/dashboard\"\n                                >\n                                    Admin\n                                </Link>\n                            </div>\n                        )}\n                        {!isAuthenticated() && (\n\n                           <Fragment>\n                                <li className=\"nav-item l1\" >\n                                <Link\n                                    className=\"nav-link\"\n                                    style={isActive(history, \"/signin\")}\n                                    to=\"/signin\"\n                                >\n                                    Signin\n                                </Link>\n                            </li>\n                           </Fragment>\n                        )}\n                    </ReactBootStrap.Nav.Link>\n                    <ReactBootStrap.Nav.Link eventKey={2} >\n                        {!isAuthenticated() && (\n\n                           <Fragment>\n                                <li className=\"nav-item l1\" >\n                                <Link\n                                    className=\"nav-link\"\n                                    style={isActive(history, \"/signup\")}\n                                    to=\"/signup\"\n                                >\n                                    Signup\n                                </Link>\n                            </li>\n                           </Fragment>\n                        )}\n                        {isAuthenticated() && (\n                            <li className=\"nav-item pull-right l1 \" >\n                                <span\n                                    className=\"nav-link \"\n                                    style={{ cursor: \"pointer\", color: \"#479438\" }}\n                                    onClick={() =>\n                                        signout(() => {\n                                            history.push(\"/\");\n                                        })\n                                    }\n                                >\n                                    Signout\n                                </span>\n                            </li>\n                        )}\n                    </ReactBootStrap.Nav.Link>\n                </ReactBootStrap.Nav>\n            </ReactBootStrap.Navbar.Collapse>\n\n        </ReactBootStrap.Navbar>\n\n    )\n};\n\nexport default withRouter(Menu);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport Menu from './Menu'\nimport '../App.css'\n\nconst Layout = ({ title = \"\", description = \"\", className, children }) => (\n    <div>\n        <Menu />\n        <br />\n        <br />\n        <div className=\"\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div>\n        <div className={className}>{children}</div>\n    </div>\n);\n\n\n\n\nexport default Layout;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom'\nimport Layout from '../core/Layout'\nimport {signup} from '../auth/index'\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name:'',\n        email:'',\n        password:'',\n        error:'',\n        success: false\n    });\n\n    const {name, email, password, success, error} = values\n    \n    const handleChange = name => event => {\n        setValues({...values, error: false, [name]: event.target.value});\n    };\n\n\n\n\n\nconst clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({...values, error: false });\n    signup({name, email, password})\n    .then(data => {\n        if(data.error) {\n            setValues({...values, error: data.error, success: false})\n        }else {\n            setValues({\n                ...values,\n                name:'',\n                email:'',\n                password:'',\n                error:'',\n                success: true\n            })\n        }\n    })\n};\n\n\n    const signUpForm = () => (\n        <form className=\"\">\n            <h2 className=\"scl text-center \">Sign Up</h2>\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} placeholder=\"Enter Your Username\" required/>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} placeholder=\"Enter Your Email\" required />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} placeholder=\"Enter Your Password\" required />\n            </div> \n            <button onClick={clickSubmit} className=\"btn btncl btn-block  text-center\">\n                Sign Up\n            </button>\n            <p className=\"text-muted mt-3 bla text-center\"><small>Already have an account? <Link className=\"scl\" to=\"/signin\">Sign In</Link></small></p>\n        </form>\n        \n    );\n\n\nconst showError = () => (\n    \n     <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}} >\n            {error}\n        </div>\n    \n);\nconst showSuccess = () => (\n    <div className=\"alert alert-success\" style={{display: success ? '' : 'none'}} >\n        New account is created. Please <Link to=\"/signin\">Signin</Link>\n    </div>\n);\n\n\n\n\n\n     return(\n        <Layout className=\"container col-sm-6 col-md-6 col-lg-4  mt-5 mb-5\">\n            <br/>\n            <div className=\"jumbotron mt-5 jcol pt-3 pb-3\">\n    {showSuccess()}\n    {showError()}\n    {signUpForm()}\n    {/* {JSON.stringify(values)} */}\n    </div>\n    </Layout>\n     );\n};\n\nexport default Signup;","import React, { useState } from \"react\";\nimport { Redirect ,Link } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: \"Abii@gmail.com\",\n        password: \"abi12344\",\n        err: \"\",\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, loading, err, redirectToReferrer } = values;\n    const { user } = isAuthenticated();\n\n    const handleChange = name => event => {\n        setValues({ ...values, err: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password }).then(data => {\n            if (data.err) {\n                setValues({ ...values, err: data.err, loading: false });\n            } else {\n                authenticate(data, () => {\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        });\n    };\n\n    const signUpForm = () => (\n        <form>\n            <h2 className=\"scl text-center\">Sign In</h2>\n            <div className=\"form-group\">\n                <label className=\"scl\" >Email</label>\n                <input\n                    onChange={handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email} \n                    placeholder=\"Enter Your Email\"\n                    required\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\"  >Password</label>\n                <input\n                    onChange={handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control \"\n                    value={password}\n                    placeholder=\"Enter Your Password\"\n                    required\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-block btncl  mt-5\">\n                Sign in\n            </button>\n            <p className=\"text-muted mt-3 bla text-center \"><small>Don't have an account yet?  <Link className=\" scl\" to=\"/signup\">Sign up</Link></small></p>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: err ? \"\" : \"none\" }}\n        >\n            {err}\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToReferrer) {\n            if (user && user.role === 1) {\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                return <Redirect to=\"/\"/>;\n            }\n        }\n        if (isAuthenticated()) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    return (\n        <Layout className=\"container col-sm-6 col-md-6 col-lg-4 mt-5\"  >\n            <br />\n          <div className=\"jumbotron jcol  pt-3 pb-3 mt-5 \">\n            {showLoading()}\n            {showError()}\n            {signUpForm()}\n            {redirectUser()}\n          </div>\n        </Layout>\n    );\n};\n\nexport default Signin;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport { API } from \"../config\";\nimport '../App.css'\n\nconst ShowImage = ({ item, url }) => (\n    <div className=\"service-i\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"imgg1 mx-auto img-responsive\"\n            \n        />\n    </div>\n);\n// const ShowImaged = ({ items, url }) => (\n//     <div className=\"service-img\">\n//         <img\n//             src={`${API}/${url}/photo/${items._id}`}\n//             alt={items.name}\n//             className=\"mb-3\"\n//             // style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n//         />\n//     </div>\n// );\n\nexport default ShowImage;\n\n\n\n// export default ShowImaged;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\n// import moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\nimport '../App.css';\n \nconst Card = ({\n  service,\n  showViewServiceButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveServiceButton = false,\n  // showRemoveDetailButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(service.count);\n \n  const showViewButton = showViewServiceButton => {\n    return (\n      showViewServiceButton && (\n        <Link to={`/service/${service._id}`} className=\"mr-2\">\n          <span className=\"mx-auto  float-left \">\n          \n         <strong> <i className=\"fas fa-eye Icon1 \"> </i></strong>   \n            </span>\n        </Link>\n      )\n    );\n  };\n  \nconst addToCart = () => {\n    // console.log('added');\n    addItem(service, setRedirect(true));\n  };\n \n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n \n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <span onClick={addToCart} className=\"mx-auto float-left  \" >\n          {/* Add to cart */}\n         <Link> <i className='fas fa-shopping-cart Icon1' ></i> </Link>\n        </span>\n      )\n    );\n  };\n \n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"mx-auto Instock\">In Stock </span>\n    ) : (\n      <span className=\"mx-auto Instock\">Out of Stock </span>\n    );\n  };\n \n  const handleChange = serviceId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(serviceId, event.target.value);\n    }\n  };\n \n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Adjust Quantity</span>\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(service._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveServiceButton => {\n    return (\n      showRemoveServiceButton && (\n        <button\n          onClick={() => {\n            removeItem(service._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          className=\"btn btn-outline-danger mt-2 mb-2\"\n        >\n          {/* Remove */}<i className='fas fa-trash-alt'></i>\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card box1  \" id=\"hoverbo\">\n      <div className=\"card-header card-header-1 \">{service.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <div className=\"imgEffect\">\n          <div className=\"pr-4 pl-4 mb-3\">\n        <ShowImage className=\"effect1 mb-3\" item={service} url=\"service\" />\n        </div>\n        <div className=\"middleEffect\">\n        \n          <div className=\"btnMiddle \"><span className=\"mr-auto\">{showViewButton(showViewServiceButton)  }             {showAddToCartBtn(showAddToCartButton)} </span></div>\n        </div> \n        </div>\n        <div className=\"text-center mb-3\">\n                 {/* <p className=\"card-p card-item black text-center mt-2 pt-2 pb-2 cardimg1\">Rs {service.price}</p>  */}\n       <span onClick={addToCart} className=\"card-p card-item text-center mt-2 pt-2 pb-2 cardimg1  mt-3 mb-3 pr-3 pl-3 \"> <Link className=\"scl\"  to=\"/cart\">Buy Now</Link></span>\n\n        </div>\n        <div className=\"mb-4 mt-4\">\n        <p className=\"text-cente mb-3 \"><strong className=\"scl\">Type of Material:</strong> {service.description.substring(0, 90)} </p>\n        </div>\n        {/* <p className=\"blac card-item\">Category: {service.category && service.category.name}</p> */}\n        {/* <p className=\"black-8 card-item\">Added on {moment(service.createdAt).fromNow()}</p> */}\n        <div className=\"row r1 text-center\">\n          <div className=\" col-md-6 col-sm-3 col-lg-6  \">\n        {showStock(service.quantity)}\n        </div>\n        <div className=\"col-md-6 col-sm-3 col-lg-6 \">\n        <span  className=\"card-p card-item text-center mb-4 cardimg2 pt-1  pb-1 \">Rs {service.price}</span>\n        </div>\n        {/* <div className=\"col-md-4 col-sm-4 col-lg-4\">\n        {showAddToCartBtn(showAddToCartButton)}\n        </div> */}\n        </div>\n        <br /> \n        <div>{showRemoveButton(showRemoveServiceButton)}\n \n {showCartUpdateOptions(cartUpdate)}</div>\n      </div>\n    </div>\n  );\n};\n \nexport default Card;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n    const [data, setData] = useState({\n        categories: [],\n        category: \"\",\n        search: \"\",\n        results: [],\n        searched: false\n    });\n\n    const { categories, category, search, results, searched, error } = data;\nconsole.log(data)\n    const loadCategories = () => {\n        getCategories().then(data => {\n             {\n                setData({ ...data, categories: data });\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const searchData = () => {\n        // console.log(search, category);\n        if (search) {\n            list({ search: search || undefined, category: category }).then(\n                response => {\n                    if (response.err) {\n                        console.log(response.err);\n                    } else {\n                        setData({ ...data, results: response, searched: true });\n                    }\n                }\n            );\n        }\n    };\n\n    const searchSubmit = e => {\n        e.preventDefault();\n        searchData();\n    };\n\n    const handleChange = name => event => {\n        setData({ ...data, [name]: event.target.value, searched: false });\n    };\n\n    const searchMessage = (searched, results) => {\n        if (searched && results.length > 0) {\n            return `Found ${results.length} products`;\n        }\n        if (searched && results.length < 1) {\n            return `No products found`;\n        }\n    };\n\n    const searchedServices = (results = []) => {\n        return (\n            <div>\n                <h2 className=\"mt-4 mb-4\">\n                    {searchMessage(searched, results)}\n                </h2>\n\n                <div className=\"row\">\n                    {results.map((service, i) => (\n                        <div className=\"col-4 mb-3\">\n                            <Card key={i} service={service} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    const searchForm = () => (\n        <form onSubmit={searchSubmit}>\n            <span className=\"input-group-text ss1\">\n                <div className=\"input-group input-group-sm \">\n                    <div className=\"input-group-prepend\">\n                        <select\n                            className=\"btn mr-2\"\n                            onChange={handleChange(\"category\")}\n                        >\n                            <option value=\"All\">All</option>\n                            {categories.map((c, i) => (\n                                <option key={i} value={c._id}>\n                                    {c.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        onChange={handleChange(\"search\")}\n                        placeholder=\"Search by product name\"\n                    />\n                </div>\n                <div\n                    className=\"btn  input-group-append\"\n                    style={{ border: \"none\" }}\n                >\n                    <button className=\"input-group-text\"><i className='fab fa-sistrix'></i>{/*Search*/}</button>\n                </div>\n            </span>\n        </form>\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"container mb-3\">{searchForm()}</div>\n            <div className=\"container-fluid mb-3 scl\">\n                {searchedServices(results)}\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n\n\n\n\n\n\n\n\n\n\n\n","import { API } from '../config';\nimport queryString from 'query-string'\n\nexport const getServices = sortBy => {\n    return fetch(`${API}/services?sortBy=${sortBy}&order=desc&limit=12`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const list = params => {\n    const query = queryString.stringify(params)\n    console.log('query', query)\n    return fetch(`${API}/services/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const read = (serviceId) => {\n    return fetch(`${API}/service/${serviceId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listRelated = (serviceId) => {\n    return fetch(`${API}/services/related/${serviceId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// export const createOrder = (userId, token, createOrderData) => {\n//     return fetch(`${API}/order/create/${userId}`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${token}`\n//         },\n//         body: JSON.stringify({ order: createOrderData })\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n\n\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// export const createOrder = (userId, token, createOrderData) => {\n\n//     return fetch(`${API}/order/create/${userId}`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${token}`\n//         },\n//         body: JSON.stringify({ order: createOrderData })\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n\n\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({order: createOrderData})\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const updateDetailStatus = (userId, token, deatilId, status) => {\n    return fetch(`${API}/detail/${deatilId}/status/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({status, deatilId})\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/detail/status-values/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n\nexport const checkedItem = (item, next) => {\n    let message = []\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('message')) {\n            message = JSON.parse(localStorage.getItem('message'));\n        }\n        message.push({\n            ...item, \n            count: 1\n        });\n\n        // remove duplicates \n        // build an Array from new Set and turn it back into array using Array. from\n        // so that later we can re-map it\n        // new set will only allow unique values in it \n        // so pass the ids of each object/service\n        // if the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual service from the cart\n\n        message = Array.from(new Set(message.map((d) => (d._id)))).map(id => {\n            return message.find(d => d._id === id );\n        });\n\n        localStorage.setItem('message', JSON.stringify(message));\n        next();\n    }\n};\n\nexport const getToChecked = () => {\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('message')) {\n            return JSON.parse(localStorage.getItem('message'));\n        }\n\n    }\n    return [];\n};","\nimport React, { useState, useEffect } from 'react';\nimport { getServices } from './apiCore';\nimport Card from './Card';\nimport Search from './Search';\nimport Menu from './Menu'\nimport '../App.css'\n// import Footer from './Footer';\n\n\nconst Home = () => {\n\n    const [servicesByArrival, setServicesByArrival] = useState([]);\n\n    const [error, setError] = useState(false);\n\n\n\n    const loadServicesByArrival = () => {\n        getServices().then(data => {\n            // console.log(data);\n\n            {\n                setServicesByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadServicesByArrival();\n    }, []);\n\n    return (\n        <div>\n            <Menu />\n\n            <br />\n            <br />\n            <div className=\"jumbotron jj1 mt-4\">\n                <h1 className=\"cll1 text-center mt-5\">CleanLife</h1>\n                <h3 className=\"text-center \">A Stepping To Keep Environment Clean</h3>\n            </div>\n            <div className=\"container col-md-12 col-sm-12 col-lg-9 \">\n\n                <Search />\n                {/* <h2 className=\"container mb-4\">New Arrivals</h2> */}\n                <div className=\"row\">\n\n                    {servicesByArrival.map((service, i) => (\n                        <div key={i} className=\"col-lg-4 col-md-4 col-sm-12 mb-3\">\n                            <Card service={service} />\n                        </div>\n                    ))}\n\n\n                </div>\n\n            </div>\n            {/* <Footer/> */}\n        </div>\n    );\n};\n\nexport default Home;","// eslint-disable-next-line\nimport React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {isAuthenticated} from './index'\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n  <Route {...rest} render={props => isAuthenticated() ? (\n    <Component {...props}/>\n  ) : (\n\n    <Redirect to={{pathname: '/signin', state:{from: props.location}}} />\n\n  )}/>\n)\n\n\nexport default PrivateRoute","import React, {useState, useEffect} from 'react'\nimport Layout from '../core/Layout'\nimport {isAuthenticated} from '../auth'\nimport {Link} from 'react-router-dom'\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\n\n\n\n\nconst Dashboard = () => {\n  const [history, setHistory] = useState([]);\n\n\nconst {\n  user: { _id, name, email, role }\n} = isAuthenticated();\nconst token = isAuthenticated().token;\n\nconst init = (userId, token) => {\n  getPurchaseHistory(userId, token).then(data => {\n      if (data.error) {\n          console.log(data.error);\n      } else {\n          setHistory(data);\n      }\n  });\n};\n\nuseEffect(() => {\n  init(_id, token);\n}, []);\n\nconst userLinks = () => {\n  return (\n    <div className=\"card scl jco card-he mb-5\">\n    <h4 className=\"card-header scl jcol\">Let's go</h4>\n    <ul className=\"list-group letscl\">\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/cart\">My Cart</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to={`/profile/${_id}`}>Update Profile</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to={`/create/detail`}>Send your details</Link></li>\n      {/* <li className=\"list-group-item\"><Link className=\"nav-link\" to={`/create/contact`}>contact us</Link></li> */}\n\n\n    </ul>\n    </div>\n  )\n}\n\n\nconst userInfo = () => {\n  return (\n    <div className=\"card mb-5 jco card-he \">\n      <h3 className=\"card-header scl jcol card-header-1\">User Details</h3>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">{name}</li>\n        <li className=\"list-group-item\">{email}</li>\n        <li className=\"list-group-item\">{role === 1 ? 'Admin': 'Registerd User'}</li>\n      </ul>\n      </div>\n  )\n}\n\n\nconst purchaseHistory = history => {\n  return (\n    <div>\n      <div className=\"card mb-5 card-hea  jco\">\n          <h3 className=\"card-header scl jcol card-header-1\">Purchase history</h3>\n          <ul className=\"list-group\">\n              <li className=\"list-group-item\">\n                  {history.map((h, i) => {\n                      return (\n                          <div>\n                              <hr />\n                              {h.services.map((s, i) => {\n                                  return (\n                                      <div key={i}>\n                                          <h6>Product name: {s.name}</h6>\n                                          <h6>\n                                              Product price: ${s.price}\n                                          </h6>\n                                          {/* <h6>\n                                              Add to Cart time:{\" \"}\n                                              {moment(\n                                                  s.createdAt\n                                              ).fromNow()}\n                                          </h6> */}\n                                      </div>\n                                  );\n                              })}\n                          </div>\n                      );\n                  })}\n              </li>\n          </ul>\n      </div>\n      </div>\n  );\n};\n\n\nconst noPurchaseHistory = () => (\n  <div>\n  {/* <h2 className=\"cll1\">\n    You didn't done any Purchase. <br />\n  </h2> */}\n   <Link className=\"linkk\" to=\"/\"> <h4 className=\"jcol scl pt-3 pb-3 pr-3 pl-3  head1 text-center\"><div className=\"linkk\"> Continue shopping.</div> </h4> </Link> \n   </div>\n);\n\n// {items.length > 0 ? showItems(items) : noItemsMessage()}\n  return (\n    <Layout  className=\"container mt-5 col-lg-10 col-md-10 col-sm-12 mb-5 \">\n      <br />\n    <div className='row jumbotron jcol mt-5'>\n      <div className='col-lg-3 col-md-3 col-sm-12'>\n      {userLinks()}\n      {/* {userInfo()} */}\n      </div>\n<br/>\n      <div className='col-lg-6 col-md-6 col-sm-12'>\n      \n      {history.length > 0 ? purchaseHistory(history) : noPurchaseHistory()}\n      </div>\n      <div className='col-lg-3 col-md-3 col-sm-12'>\n      {/* {userLinks()} */}\n      {userInfo()}\n      </div>\n\n        </div>\n\n\n    </Layout>\n  )\n}\n\nexport default Dashboard","import { API } from '../config';\n\n\n\n\n// export const read = (userId, token) => {\n//     return fetch(`${API}/user/${userId}`, {\n//         method: \"GET\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${token}`\n//         }\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const updateUser = (user, next) => {\n    if(typeof window !== 'undefined') {\n        if(localStorage.getItem('jwt')) {\n            let auth = JSON.parse(localStorage.getItem('jwt'))\n            auth.user = user\n            localStorage.setItem('jwt', JSON.stringify(auth))\n            next();\n        }\n    }\n};\n\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const createDetail = (userId, token, detail) => {\n    // console.log(name, email, password);\n   return  fetch(`${API}/detail/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: detail\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => {\n        console.log(err)\n    });\n};\n\n\nexport const createContact = (userId, token, contact) => {\n    // console.log(name, email, password);\n   return  fetch(`${API}/contact/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: contact\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => {\n        console.log(err)\n    });\n};\n\n\n\n","// eslint-disable-next-line\nimport React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {isAuthenticated} from './index'\n\n\nconst AdminRoute = ({component: Component, ...rest}) => (\n  <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role === 1 ? (\n    <Component {...props}/>\n  ) : (\n\n    <Redirect to={{pathname: '/signin', state:{from: props.location}}} />\n\n  )}/>\n);\n\n\nexport default AdminRoute","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from './cartHelpers'\nimport '../App.css';\nimport * as ReactBootStrap from 'react-bootstrap'\n\n\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#000\" };\n    } else {\n        return { color: \"#479438\" }\n    }\n};\n\n\n\n\nconst MenuAdmin = ({ history }) => {\n    const [navbar, setNavbar] = useState(false);\n\n    const changeBackground = () => {\n        if (window.scrollY >= 70) {\n            setNavbar(true);\n        } else {\n            setNavbar(false)\n        }\n    }\n\n\n    window.addEventListener('scroll', changeBackground)\n    return (\n        \n        \n        <ReactBootStrap.Navbar collapseOnSelect className= \"jcol1 fixed-top \"  expand=\"sm\" bg=\"\" variant=\"dark\">\n  <ReactBootStrap.Navbar.Brand >\n  <Link className=\"nav-brand logo12 ml-3 mb-3\" style={{ color: '#000' }} to=\"/admin/dashboard\">\n            <img className=\"logo12\" style={{width:\"160px\",paddingTop:\"\", paddingBottom:\"10px\"}} src=\"https://svgshare.com/i/QV9.svg\" />\n            \n        </Link>\n  </ReactBootStrap.Navbar.Brand>\n  <ReactBootStrap.Navbar.Toggle className=\"tcol\" aria-controls=\"responsive-navbar-nav\" />\n  <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n    <ReactBootStrap.Nav className=\"mr-auto\">\n      \n     \n    </ReactBootStrap.Nav>\n    <ReactBootStrap.Nav>\n      <ReactBootStrap.Nav.Link >\n{/* <div> */}\n{isAuthenticated() && isAuthenticated().user.role === 0 && (\n            <div className=\"nav-item l1\" >\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/user/dashboard\")}\n                    to=\"/user/dashboard\"\n                >\n                  \n                   Dashboard\n      \n                </Link>\n            </div>\n        )}\n        {isAuthenticated() && isAuthenticated().user.role === 1 && (\n            <div className=\"nav-item l1\" >\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/admin/dashboard\")}\n                    to=\"/admin/dashboard\"\n                >\n                    Admin\n    </Link>\n            </div>\n        )}\n        {!isAuthenticated() && (\n          \n          <li className=\"nav-item l1\" >\n          <Link\n              className=\"nav-link\"\n              style={isActive(history, \"/signin\")}\n              to=\"/signin\"\n          >\n              Signin\n  \n          </Link>\n      </li>\n        )}\n      </ReactBootStrap.Nav.Link>\n      <ReactBootStrap.Nav.Link eventKey={2} >\n      {!isAuthenticated() && (\n           \n                <li className=\"nav-item l1\" >\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/signup\")}\n                        to=\"/signup\"\n                    >\n                        Signup\n           \n                    </Link>\n                </li>\n      )}\n       {isAuthenticated() && (\n            <li className=\"nav-item pull-right l1 \" >\n                <span\n                    className=\"nav-link \"\n                    style={{ cursor: \"pointer\", color: \"#479438\" }}\n                    onClick={() =>\n                        signout(() => {\n                            history.push(\"/\");\n                        })\n                    }\n                >\n                    Signout\n        \n\n                </span>\n            </li>\n        )}\n      </ReactBootStrap.Nav.Link>\n    </ReactBootStrap.Nav>\n  </ReactBootStrap.Navbar.Collapse>\n</ReactBootStrap.Navbar>\n        \n    )\n};\n\nexport default withRouter(MenuAdmin);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport MenuAdmin from './MenuAdmin'\nimport '../App.css'\n\nconst LayoutAdmin = ({ title = \"\", description = \"\", className, children }) => (\n    <div>\n        <MenuAdmin />\n        <br />\n        <br />\n        <div className=\"\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div>\n        <div className={className}>{children}</div>\n    </div>\n);\n\n\n\n\nexport default LayoutAdmin;","import React from \"react\";\nimport { API } from \"../config\";\nimport '../App.css'\n\nconst ShowImage2 = ({ item, url }) => (\n    <div className=\"s\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"img-responsive\"\n            style={{ maxHeight: \"50px\", maxWidth: \"50px\" }}\n        />\n        {/* <br />\n        <br />\n        <br /> */}\n    </div>\n);\n// const ShowImaged = ({ items, url }) => (\n    // <div className=\"service-img\">\n    //     <img\n    //         src={`${API}/${url}/photo/${items._id}`}\n    //         alt={items.name}\n    //         className=\"mb-3\"\n    //         // style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n    //     />\n    // </div>\n// );\n\nexport default ShowImage2;\n\n\n\n// export default ShowImaged;","import { API } from '../config';\n\n\nexport const createCategory = (userId, token, category) => {\n    // console.log(name, email, password);\n   return  fetch(`${API}/category/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => {\n        console.log(err)\n    });\n};\n  \n\n\n\n\nexport const createService = (userId, token, service) => {\n    // console.log(name, email, password);\n   return  fetch(`${API}/service/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: service\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => {\n        console.log(err)\n    });\n};\n  \n\n\n\n\n\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err));\n}\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(response => {\n        return response.json()\n    })\n    .catch(err => console.log(err));\n}\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({status, orderId})\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n/**\n * to perform crud on service\n * get all services\n * get a single service\n * update single service\n * delete single service\n */\n\nexport const getServices = () => {\n    return fetch(`${API}/services?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteService = (serviceId, userId, token) => {\n    return fetch(`${API}/service/${serviceId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getService = serviceId => {\n    return fetch(`${API}/service/${serviceId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateService = (serviceId, userId, token, service) => {\n    return fetch(`${API}/service/${serviceId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: service\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\n// export const getDetails = () => {\n//     return fetch(`${API}/admin/details`, {\n//         method: 'GET'\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n\n\n\nexport const getDetails = (sortBy ) => {\n    return fetch(`${API}/details?sortBy=${sortBy}&order=desc&limit=100`, {\n        method: \"GET\",\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\n\n\nexport const removeItem = detailId => {\n    let dashboard = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('dashboard')) {\n            dashboard = JSON.parse(localStorage.getItem('dashboard'));\n        }\n\n        dashboard.map((detail, i) => {\n            if (detail._id === detailId) {\n                detail.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('dashboard', JSON.stringify(dashboard));\n    }\n    return dashboard;\n};\n\n\nexport const deleteDetail = (detailId, userId, token) => {\n    return fetch(`${API}/detail/${detailId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const getContacts = (sortBy ) => {\n    return fetch(`${API}/contacts?sortBy=${sortBy}&order=desc&limit=100`, {\n        method: \"GET\",\n        // headers: {\n        //     Accept: \"application/json\",\n        //     \"Content-Type\": \"application/json\",\n        //     Authorization: `Bearer ${token}`\n        // }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage2 from './ShowImage2';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport {  removeItem } from '../admin/apiAdmin';\nimport '../App.css';\nimport { isAuthenticated } from '../auth/index';\nimport {getDetails, deleteDetail} from '../admin/apiAdmin'\nimport { checkedItem } from './apiCore';\n// import destroy  from \"../user/AdminDashboard\";\n \n\n\nconst {user, token} = isAuthenticated()\n\nconst Detail = ({\n  detail,\n}) => {\n\n  const [redirect, setRedirect] = useState(false);\n  const [detailsByUsers, setDetailsByUsers] = useState([])\nconst [error, setError] = useState([])\n\n\n\nconst loadDetailsByUsers = () => {\n  getDetails('createdAt').then(data => {\n    if(data.error) {\n      setError(data.error)\n    }else {\n      setDetailsByUsers(data)\n      \n    }\n  })\n}\n\n\n\n\n\nuseEffect(() => {\n  loadDetailsByUsers()\n}, [])\n   const addToMessage = () => {\n    checkedItem(detail, () => {\n      setRedirect(true)\n      // style={{display:\"none\"}}\n    })  \n  }\nconst shouldRedirect = redirect => {\n  if(redirect) {\n    return <Redirect to=\"/admin/checkedDetails\"/>\n  }\n}\n  return (\n    <div>\n      {shouldRedirect(redirect)}\n   \n    <table className=\"table table-flui text-center table-hover table-responsiv table-sm table-bordered\">\n      <tr>\n        {/* <th className=\"scl\"></th> */}\n        <th className=\"scl\">Name</th>\n        <th className=\"scl\">Photo</th>\n        <th className=\"scl\">Description</th>\n        <th className=\"scl\">PhoneNo</th>\n        <th className=\"scl\">Category</th>\n        <th className=\"scl\">Received At</th>\n        \n      </tr>\n      {detailsByUsers.map((detail) => (\n        <tr>\n        {/* <td><div>\n          <button onClick={addToMessage}   ><i class=\"fa fa-check\" aria-hidden=\"true\"></i></button>\n         \n        </div>\n        </td> */}\n        <td>{detail.name}</td>\n        <td >\n          <div className=\"td1 dropdown\" >\n          <ShowImage2 item={detail} url=\"detail\" />\n          <div className=\"dropdown-content dd1\" >\n             <ShowImage className=\" dd1\" item={detail} url=\"detail\" />\n          </div>\n          </div>\n        </td>\n        <td>{detail.description.substring(0, 10)} </td>\n        <td>{detail.phone}</td>\n        <td>{detail.category && detail.category.name}</td>\n        <td>{moment(detail.createdAt).fromNow()}</td>\n      </tr>\n      ))}\n     \n      \n    </table>\n    </div>\n    \n  );\n};\n \nexport default Detail;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {useState, useEffect} from 'react'\n\nimport LayoutAdmin from '../core/LayoutAdmin'\nimport {isAuthenticated} from '../auth'\nimport {Link} from 'react-router-dom'\n\nimport Detail from '../core/Detail'\n\n\n\nconst AdminDashboard = () => {\n\nconst {user: {_id, name, email, role, token}} = isAuthenticated()\n\n\n\nconst adminLinks = () => {\n  return (\n    <div className=\"card mb-5 card-heade \">\n    <h4 className=\"card-header scl jcol  \">Let's go</h4>\n    <ul className=\"list-group\">\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/create/category\">Create Category</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/create/service\">Create Products</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/orders\">View orders</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/services\">Manage Products</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/details\">Details</Link></li>\n      <li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/contacts\">Messages</Link></li>\n\n\n\n\n    </ul>\n    </div>\n  )\n}\n\n\n\nconst adminInfo = () => {\n  return (\n    <div className=\"card mb-5  card-hea \">\n      <h3 className=\"card-header card-heade scl jcol\">Admin Information</h3>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">{name}</li>\n        <li className=\"list-group-item\">{email}</li>\n        <li className=\"list-group-item\">{role === 1 ? 'Admin': 'Registerd User'}</li>\n      </ul>\n      </div>\n  )\n}\n\n\n\n\n\n  return (\n    <LayoutAdmin  className=\"container mt-5  mb-5\">\n      <br />\n    <div className='row jumbotron jcol mb-5 mt-5'>\n      <div className='col-lg-6 col-md-6 col-sm-12'>\n      {adminLinks()}\n      </div>\n<br/>\n      <div className='col-lg-6 col-md-6  col-sm-12'>\n      {adminInfo()}\n    \n      </div>\n\n\n        </div>\n\n\n    </LayoutAdmin>\n  )\n}\n\n\n\n\n\nexport default AdminDashboard\n\n","import React, {useState} from 'react';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport { isAuthenticated } from '../auth/index';\nimport { Link } from 'react-router-dom';\nimport {createCategory} from './apiAdmin'\n\n\n\nconst AddCategory = () => {\n    const [name, setName] = useState('')\n    const [error, setError] = useState(false)\n    const [success, setSuccess] = useState(false)\n\n\n    // destructure user and token from localstorage\n    const {user, token} = isAuthenticated();\n\n    const handleChange = (e) => {\n        setError('')\n        setName(e.target.value);\n        \n\n    };\n\n    const clickSubmit = (e) => {\n        e.preventDefault()\n        setError('')\n        setSuccess(false)\n        // make request to api to create category\n        createCategory(user._id, token, {name})\n        .then(data => {\n            if(data.error){\n                setError(data.error)\n            }else {\n                setError('');\n                setSuccess(true);\n            }\n        });\n    };\n\n\n\n    const newCategoryForm = () => (\n        <form onSubmit={clickSubmit}>\n            <h2 className=\"text-center mb-3 scl\">Create Category</h2>\n            <hr/>\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} autoFocus required />\n                \n            </div>\n            <button className=\"btn Instock\">Create Category</button>\n        </form>\n    );\n\n        const showSuccess = () => {\n            if(success) {\n            return <h3 className=\"text-success\">{name} is created</h3>\n            }\n        };\n\n        const showError = () => {\n            if(error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>\n            }\n        };\n        const goBack = () => (\n            <div className=\"mt-5\">\n                <Link to=\"/admin/dashboard\" className=\"text-success\">Back to Dashboard</Link>\n            </div>\n        );\n\n\n\n\n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-5 col-md-6 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n            <div className=\"col-md-12 offset-md-0\">\n                {showSuccess()}\n                {showError()}\n                {newCategoryForm()}\n                {goBack()}\n                 </div>\n            </div>\n\n        </LayoutAdmin>\n    );\n\n};\n\n\nexport default AddCategory;\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport { isAuthenticated } from '../auth/index';\n// eslint-disable-next-line\nimport { Link, Redirect } from 'react-router-dom';\nimport { createService, getCategories } from './apiAdmin';\n\n\n\n\nconst AddService = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdService: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        // eslint-disable-next-line\n        category,\n        quantity,\n        photo,\n        loading,\n        error,\n        createdService,\n        // eslint-disable-next-line\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n        // eslint-disable-next-line\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createService(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    redirectToProfile: true,\n                    createdService: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h2 className=\"text-center mb-3 scl\">Create Products</h2>\n            <hr/>\n            <h4 className=\"scl\">Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Type Of Material</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn Instock\">Create Products</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-success\" style={{ display: createdService ? '' : 'none' }}>\n            <h2>{`${createdService}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n        const redirectUser = () => {\n            if (redirectToProfile) {\n                if (!error) {\n                    return <Redirect to=\"/\" />;\n                }\n            }\n        };\n    \n\n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-5 col-md-6 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n            <div className=\"col-md-12 offset-md-0\">                   \n                    {newPostForm()}\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {redirectUser()}\n                    \n                </div>\n            </div>\n        </LayoutAdmin>\n    );\n};\n\nexport default AddService;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\nimport '../App.css';\n \nconst Card1 = ({\n  service,\n  showViewServiceButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveServiceButton = false,\n  // showRemoveDetailButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(service.count);\n \n  const showViewButton = showViewServiceButton => {\n    return (\n      showViewServiceButton && (\n        <Link to={`/service/${service._id}`} className=\"mr-2\">\n          <span className=\" \">\n          \n             <i className=\"fas fa-eye Icon1 \"> </i>\n            </span>\n        </Link>\n      )\n    );\n  };\n  \nconst addToCart = () => {\n    // console.log('added');\n    addItem(service, setRedirect(true));\n  };\n \n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n \n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <span onClick={addToCart} className=\" \">\n          {/* Add to cart */}\n         <Link> <i className='fas fa-shopping-cart Icon1' ></i> </Link>\n        </span>\n      )\n    );\n  };\n \n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"mx-auto Instock\">In Stock </span>\n    ) : (\n      <span className=\"mx-auto Instock\">Out of Stock </span>\n    );\n  };\n \n  const handleChange = serviceId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(serviceId, event.target.value);\n    }\n  };\n \n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              {/* <span className=\"input-group-text\"></span> */}\n            </div>\n            <input type=\"number\" className=\"form-control bod\" value={count} onChange={handleChange(service._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveServiceButton => {\n    return (\n      showRemoveServiceButton && (\n        <span\n          onClick={() => {\n            removeItem(service._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          // className=\"Icon1\"\n        >\n       <Link>  {/* Remove */}<i className='fas fa-trash-alt Icon1'></i></Link>\n        </span>\n      )\n    );\n  };\n  return (\n\n\n\n\n\n    <div className=\"card box1 \">\n    <div className=\"card-header card-header-1 \">{service.name}</div>\n    <div className=\"card-body\">\n      {shouldRedirect(redirect)}\n      <div className=\"imgEffect\">\n        <div className=\"pr-5 pl-5\">\n      <ShowImage className=\"effect1\" item={service} url=\"service\" />\n      </div>\n      <div className=\"middleEffect\">\n      \n        <div className=\"btnMiddle  \"><span className=\"mr-auto \">{showViewButton(showViewServiceButton)  }             {showAddToCartBtn(showAddToCartButton)} </span></div>\n      </div> \n      </div>\n      <div className=\"text-center mb-3 mt-3 \">\n               {/* <p className=\"card-p card-item black text-center mt-2 pt-2 pb-2 cardimg1\">Rs {service.price}</p>  */}\n     <span onClick={addToCart} className=\"card-p card-item text-center  pt-2 pb-2 cardimg1  mt-5 mb-3 pr-3 pl-3 \"> <Link className=\"scl\" to=\"/cart\">Buy Now</Link></span>\n\n      </div>\n      <div className=\"mb-5\">\n        <p className=\"text-cente mb-3\"><strong className=\"scl\">Type of Material:</strong> {service.description.substring(0, 90)} </p>\n        </div>\n      {/* <p className=\"blac card-item\">Category: {service.category && service.category.name}</p> */}\n      {/* <p className=\"black-8 card-item\">Added on {moment(service.createdAt).fromNow()}</p> */}\n      <div className=\"row r1 text-center\">\n        <div className=\" col-md-6 col-sm-3 col-lg-6  \">\n      {showStock(service.quantity)}\n      </div>\n      <div className=\"col-md-6 col-sm-3 col-lg-6 \">\n      <span  className=\"card-p card-item text-center mb-4 cardimg2 pt-1  pb-1 \">Rs {service.price}</span>\n      </div>\n      {/* <div className=\"col-md-4 col-sm-4 col-lg-4\">\n      {showAddToCartBtn(showAddToCartButton)}\n      </div> */}\n      </div>\n      <br /> \n      <div>{showRemoveButton(showRemoveServiceButton)}\n\n{showCartUpdateOptions(cartUpdate)}</div>\n    </div>\n  </div>\n    // <div className=\"card box2 \">\n    //   <div className=\"card-header card-header-1 \">{service.name}</div>\n    //   <div className=\"card-body\">\n    //     {shouldRedirect(redirect)}\n    //     <div className=\"imgEffect\">\n    //       <div >\n    //     <ShowImage1 className=\"effect1\" item={service} url=\"service\" />\n    //     </div>\n    //     <div className=\"middleEffect\">\n        \n    //       <div className=\"btnMiddle1 \"><span className=\"mr-auto\">{showViewButton(showViewServiceButton)  }                 {showRemoveButton(showRemoveServiceButton)} </span></div>\n    //     </div> \n    //     </div>\n    //     <div className=\"text-center\">\n    //     <p className=\"card-p card-item black text-center mt-2 pt-2 pb-2 cardimg1\">Rs {service.price}</p>\n    //     </div>\n    //     <p className=\"text-center \">{service.description.substring(0, 90)} </p>\n\n    //    {/* <p className=\"blac card-item\">Category: {service.category && service.category.name}</p> */}\n    //     {/* <p className=\"black-8 card-item\">Added on {moment(service.createdAt).fromNow()}</p> */}\n    //     <div className=\"row r1 text-center\">\n    //       <div className=\"col-md-6 col-sm-6 col-lg-6 \">\n    //     {showStock(service.quantity)}\n    //     </div>\n    //     {/* <div className=\"col-md-3 col-sm-3 col-lg-3 \">\n    //     {showViewButton(showViewServiceButton)}\n    //     </div> */}\n    //     {/* <div className=\"col-md-3 col-sm-3 col-lg-3\">\n    //     {showRemoveButton(showRemoveServiceButton)}\n\n    //     {showAddToCartBtn(showAddToCartButton)}\n    //     </div> */}\n    //     <div className=\"col-md-6 col-sm-6 col-lg-6 mb-3 \">\n    //     {showCartUpdateOptions(cartUpdate)}\n\n    //     </div>\n    //     </div>\n    //     <br />\n    //     <br />\n    //     <br />\n \n        \n \n        \n    //     {/* <div className=\"row r1\">\n    //     <div className=\"col-lg-6\">\n    //     </div>\n \n    //     </div> */}\n        \n    //   </div><br />\n    //     <br />\n        \n    // </div>\n  );\n};\n \nexport default Card1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\n// import Card2 from './Card2';\nimport Card from './Card';\nimport Card1 from './Card1';\n// import Card from './Card';\n// import Footer from './Footer'\n\n\nconst Service = props => {\n    const [service, setService] = useState({});\n    const [relatedService, setRelatedService] = useState([]);\n    // eslint-disable-next-line\n    const [error, setError] = useState(false);\n\n    const loadSingleService = serviceId => {\n        read(serviceId).then(data => {\n            // eslint-disable-next-line\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setService(data);\n                // fetch related services\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedService(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const serviceId = props.match.params.serviceId;\n        loadSingleService(serviceId);\n    }, [props]);\n\n    return (\n        <div>\n            <Layout  className=\"container mt-5 col-lg-8 col-md-8 col-sm-12\"   >\n      <br/>\n      \n\n            <div className=\"row jumbotron jcol mt-5\">\n                <div className=\"col-lg-5 col-md-5  col-sm-12 mt-5\">\n                    <br/>\n                    {service && service.description && <Card1 service={service} showViewServiceButton={false} />}\n                </div>\n                <div className=\"col-lg-2 col-md-2 col-sm-0\"></div>\n                <div className=\"col-lg-5 col-md-5 col-sm-12 \">\n                    <h4 className=\"scl jcol pt-3 pb-3 pr-3 pl-3 head1 text-center mb-2\">Related services</h4>\n                    {relatedService.map((s, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card service={s} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n        {/* <Footer/> */}\n        </div>\n    );\n};\n\nexport default Service;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport { API } from \"../config\";\nimport '../App.css'\n\nconst ShowImage1 = ({ item, url }) => (\n    <div className=\"service-im\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"imgg1 mx-auto img-responsive\"\n            // style={{ \n                // maxHeight: \"150px\",\n                //  maxWidth: \"190px\" }}\n        />\n        {/* <br />\n        <br />\n        <br /> */}\n    </div>\n);\n// const ShowImaged = ({ items, url }) => (\n    // <div className=\"service-img\">\n    //     <img\n    //         src={`${API}/${url}/photo/${items._id}`}\n    //         alt={items.name}\n    //         className=\"mb-3\"\n    //         // style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n    //     />\n    // </div>\n// );\n\nexport default ShowImage1;\n\n\n\n// export default ShowImaged;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage1 from './ShowImage1';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\nimport '../App.css';\n \nconst Card1 = ({\n  service,\n  showViewServiceButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveServiceButton = false,\n  // showRemoveDetailButton = false,\n  setRun = f => f,\n  run = undefined\n  // changeCartSize\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(service.count);\n \n  const showViewButton = showViewServiceButton => {\n    return (\n      showViewServiceButton && (\n        <Link to={`/service/${service._id}`} className=\"mr-2\">\n          <span className=\" \">\n          \n             <i className=\"fas fa-eye Icon1 \"> </i>\n            </span>\n        </Link>\n      )\n    );\n  };\n  \nconst addToCart = () => {\n    // console.log('added');\n    addItem(service, setRedirect(true));\n  };\n \n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n \n  const showAddToCartBtn = showAddToCartButton => {\n    return (\n      showAddToCartButton && (\n        <span onClick={addToCart} className=\" \">\n          {/* Add to cart */}\n         <Link> <i className='fas fa-shopping-cart Icon1' ></i> </Link>\n        </span>\n      )\n    );\n  };\n \n  const showStock = quantity => {\n    return quantity > 0 ? (\n      <span className=\"mx-auto Instock\">In Stock </span>\n    ) : (\n      <span className=\"mx-auto Instock\">Out of Stock </span>\n    );\n  };\n \n  const handleChange = serviceId => event => {\n    setRun(!run); // run useEffect in parent Cart\n    setCount(event.target.value < 1 ? 1 : event.target.value);\n    if (event.target.value >= 1) {\n      updateItem(serviceId, event.target.value);\n    }\n  };\n \n  const showCartUpdateOptions = cartUpdate => {\n    return (\n      cartUpdate && (\n        <div>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              {/* <span className=\"input-group-text\"></span> */}\n            </div>\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(service._id)} />\n          </div>\n        </div>\n      )\n    );\n  };\n  const showRemoveButton = showRemoveServiceButton => {\n    return (\n      showRemoveServiceButton && (\n        <span\n          onClick={() => {\n            removeItem(service._id);\n            setRun(!run); // run useEffect in parent Cart\n          }}\n          // className=\"Icon1\"\n        >\n       <Link>  {/* Remove */}<i className='fas fa-trash-alt Icon1'></i></Link>\n        </span>\n      )\n    );\n  };\n  return (\n<div className=\"card box1 \">\n      <div className=\"card-header card-header-1 \">{service.name}</div>\n      <div className=\"card-body\">\n        {shouldRedirect(redirect)}\n        <div className=\"imgEffect\">\n          <div >\n        <ShowImage1 className=\"effect1\" item={service} url=\"service\" />\n        </div >\n        <div className=\"middleEffect\">\n        \n          <div className=\"btnMiddle \"><span className=\"mr-auto \">{showViewButton(showViewServiceButton)  }                 {showRemoveButton(showRemoveServiceButton)} </span></div>\n        </div> \n        </div>\n        <div className=\"text-center mt-3 mb-3\">\n        <span className=\"card-p card-item black text-center mt-5 pt- pb-2 Instock  pt-2 pb-2  mb- pr-3 pl-3\">Rs {service.price}</span>\n        </div>\n        <div className=\"mb-5\">\n        <p className=\"text-cente mb-3\"><strong className=\"scl\">Type of Material:</strong> {service.description.substring(0, 90)} </p>\n        </div>\n       {/* <p className=\"blac card-item\">Category: {service.category && service.category.name}</p> */}\n        {/* <p className=\"black-8 card-item\">Added on {moment(service.createdAt).fromNow()}</p> */}\n        <div className=\"row r1 text-center\">\n          <div className=\"col-md-6 col-sm-6 col-lg-6 mb\">\n        {showStock(service.quantity)}\n        </div>\n        {/* <div className=\"col-md-3 col-sm-3 col-lg-3 \">\n        {showViewButton(showViewServiceButton)}\n        </div> */}\n        {/* <div className=\"col-md-3 col-sm-3 col-lg-3\">\n        {showRemoveButton(showRemoveServiceButton)}\n\n        {showAddToCartBtn(showAddToCartButton)}\n        </div> */}\n        <div className=\"col-md-6 col-sm-6 col-lg-6 mb \">\n        {showCartUpdateOptions(cartUpdate)}\n\n        </div>\n        </div>\n        <br />\n        <br />\n        <br />\n \n        \n \n        \n        {/* <div className=\"row r1\">\n        <div className=\"col-lg-6\">\n        </div>\n \n        </div> */}\n        \n      </div><br />\n        <br />\n        \n    </div>\n\n\n\n\n\n\n    // <div className=\"card box2 \">\n    //   <div className=\"card-header card-header-1 \">{service.name}</div>\n    //   <div className=\"card-body\">\n    //     {shouldRedirect(redirect)}\n    //     {/* <div className=\"imgEffect\"> */}\n    //       {/* <div > */}\n    //     <ShowImage1 className=\"effect1\" item={service} url=\"service\" />\n    //     {/* </div> */}\n    //     {/* <div className=\"middleEffect\">\n        \n    //       <div className=\"btnMiddle1 \"><span className=\"mr-auto\">{showViewButton(showViewServiceButton)  }                 {showRemoveButton(showRemoveServiceButton)} </span></div>\n    //     </div> \n    //     </div> */}\n    //     <div className=\"text-center\">\n    //     <p className=\"card-p card-item black text-center mt-2 pt-2 pb-2 cardimg1\">Rs {service.price}</p>\n    //     </div>\n    //     <p className=\"text-center \">{service.description.substring(0, 200)} </p>\n\n    //    {/* <p className=\"blac card-item\">Category: {service.category && service.category.name}</p> */}\n    //     {/* <p className=\"black-8 card-item\">Added on {moment(service.createdAt).fromNow()}</p> */}\n    //     <div className=\"row r1\">\n    //       <div className=\"col-md-6 col-sm-6 col-lg-6 text-center \">\n    //     {showStock(service.quantity)}\n    //     </div>\n    //     {/* <div className=\"col-md-3 col-sm-3 col-lg-3 \">\n    //     {showViewButton(showViewServiceButton)}\n    //     </div> */}\n    //     <div className=\"col-md-6 col-sm-6 col-lg-6 text-center \">\n       \n\n    //     {showAddToCartBtn(showAddToCartButton)}\n    //     </div>\n    //     {/* <div className=\"col-md-4 col-sm-4 col-lg-4 \">\n    //     {showCartUpdateOptions(cartUpdate)}\n\n    //     </div> */}\n    //     </div>\n    //     <br />\n    //     <br />\n    //     <br />\n \n        \n \n        \n    //     <div className=\"row r1\">\n    //     <div className=\"col-lg-6\">\n    //     </div>\n \n    //     </div>\n        \n    //   </div><br />\n    //     <br />\n        \n    // </div>\n  );\n};\n \nexport default Card1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getServices, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport {emptyCart} from './cartHelpers'\n// import Card from './Card';\n// import Search from './Search';\nimport {isAuthenticated} from '../auth/index'\nimport {Link, Redirect} from 'react-router-dom'\nimport DropIn from 'braintree-web-drop-in-react';\n\n\n\nconst Checkout = ({services, setRun = f => f, run = undefined}) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: \"\",\n        redirectTothanksForthePayment: false\n    })\n\n    const userId = isAuthenticated() && isAuthenticated().user._id\n    const token = isAuthenticated() && isAuthenticated().token\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if(data.error){\n                setData({...data, error: data.error})\n            }else {\n                setData({ clientToken: data.clientToken })\n            }\n        })\n    }\n\n\n    useEffect(() => {\n        getToken(userId, token)\n    }, [])\n\n    const handleAddress = event => {\n        setData({...data, address: event.target.value});\n    }\n\n\n    const getTotal = () => {\n        return services.reduce((currentValue, nextValue) => {\n                return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n        <div>{showDropIn()}</div>\n        ) : (\n            <div className=\"text-center\">\n                <Link to=\"/signin\" >\n                <button className=\"btn bgg bla1 brr\">Sign in to checkot</button>\n\n            </Link>\n            </div>\n            \n);\n    };\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true })\n\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod\n        let nonce;\n        let getNonce = data.instance.requestPaymentMethod()\n        .then(data => {\n            // console.log(data)\n            nonce = data.nonce\n            // once you have nonce (card type, card number ) send nonce as 'paymentMethodNonce'\n            // and also total to be chaged\n            // console.log('send nonce and total to process: ', nonce, getTotal(services))\n            const paymentData = {\n                paymentMethodNonce: nonce,\n                amount: getTotal(services)\n            }\n            processPayment(userId, token, paymentData)\n            .then(response => {\n                console.log(response);\n\n                \n                // empty cart\n                // create order\n\n                const createOrderData = {\n                    services: services,\n                    transaction_id: response.transaction.id,\n                    amount: response.transaction.amount,\n                    address: deliveryAddress\n                }\n\n                createOrder(userId, token, createOrderData)\n                .then(response => {\n                    emptyCart(() => {\n                        setRun(!run); // run useEffect in parent Cart\n                        console.log(\"payment success and empty cart\");\n                        setData({ loading: false});\n                    });\n                setData({ loading: false, success: true , redirectTothanksForthePayment: true });\n\n                })\n\n\n            })\n            .catch(error => {\n                console.log(error);\n                setData({ loading: false });\n            });\n    })\n    .catch(error => {\n        // console.log(\"dropin error: \", error);\n        setData({ ...data, error: error.message });\n    });\n};\n\n   \n\n    const showDropIn = () => (\n        <div onBlur={() => setData({...data, error: \"\"})}>\n            {data.clientToken !== null && services.length > 0 ? (\n                <div>\n                    <div>\n                        <div className=\"gorm-group mb-3\">\n                            <label className=\"text-muted scl\">Delivery address</label>\n                            <textarea  onChange={handleAddress}  className=\"form-control\" value={data.address} placeholder=\"Type your delivery address here...\"/>\n                        </div>\n                    </div>\n                    <DropIn options={{\n                        authorization: data.clientToken,\n                        paypal: {\n                            flow: \"vault\"\n                        }\n                    }} onInstance={instance => (data.instance = instance )}/>\n                    <button onClick={buy} className=\"btn bgg btn-block\">\n                        {/* Pay  */}\n                        <strong>\n                         <i className=\"fab fa-amazon-pay\"></i></strong></button>\n                </div>\n            ) : null }\n        </div>\n    );\n\n    const showError = error => (\n        \n            <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>\n                {error}\n            </div>\n        \n    );\n\n    const showSuccess = success => (\n        \n        <h2 className=\"alert scl\" style={{display: success ? '' : 'none'}}>\n            Payment successful!\n            {/* <Redirect to='/cart/thanksForthePayment'/> */}\n        </h2>\n    \n);\nconst redirectthanksForthePayment = () => {\n    if(data.success) {\n         {\n            return <Redirect to=\"/thanksForthePayment\" />;\n        }\n    }\n};\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n\nreturn (\n    <div>\n        <h5 className=\"scl jcol pt-3 pb-3 pr-3 pl-3 head1 text-center \" style={{align:'right'}}> Total: Rs: {getTotal()}</h5>\n        {showLoading(data.loading)}\n        {showError(data.error)}\n        {showCheckout()}\n        {showSuccess(data.success)}\n\n        {redirectthanksForthePayment(data.redirectTothanksForthePayment)}\n    </div>\n);\n};\n\n\n\nexport default Checkout;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { Link } from 'react-router-dom';\nimport { getCart } from './cartHelpers';\nimport Card1 from './Card1';\nimport Card2 from './Card2';\nimport Checkout from './Checkout';\n// import Footer from './Footer'\n\n\nconst Cart = () => {\n  const [items, setItems] = useState([]);\n  const [cartSize, setCartSize] = useState([]);\n  const [run, setRun] = useState(false);\n \n  useEffect(() => {\n    console.log('MAX DEPTH ...');\n    setItems(getCart());\n  }, [run]);\n \n  const showItems = items => {\n    return (\n      <div>\n        <h4 className=\"scl jcol pt-3 pb-3 pr-3 pl-3 head1 text-center mb-4\"> Cart ( {`${items.length}`} )</h4>\n        <hr />\n        <div className=\"row\">\n        {items.map((service, i) => (\n        <div key={i} className=\"col-lg-6 col-md-6 col-sm-12 \">\n       <br></br>\n          <Card2\n            \n            service={service}\n            showAddToCartButton={false}\n            cartUpdate={true}\n            showRemoveServiceButton={true}\n            setRun={setRun}\n            run={run}\n            // changeCartSize={changeCartSize}\n          />\n        </div>\n\n        ))}\n        </div>\n        {/* <br />\n        <br />\n        <br /> */}\n\n      </div>\n    );\n  };\n \n  const noItemsMessage = () => (\n    <div>\n    <h4 className=\"scl jcol pt-3 pb-3 pr-3 pl-3 head1 text-center\">\n      Your Cart is Empty</h4> <br />\n      <Link className=\"linkk\" to=\"/\"><h5 className=\"scl jcol pt-3 pb-3 pr-3 pl-3  head1 text-center \"> <div className=\"linkk\">Time to shopping.</div></h5> </Link>\n      </div>\n  );\n \n  return (\n    <div>\n    <Layout  className=\"container  mt-5 col-lg-10 col-md-10 col-sm-12\">\n      <br/>\n      <div className=\"row jumbotron jcol mt-5\">\n        <div className=\"col-lg-6 col-md-6 col-sm-12 mb-3\">{items.length > 0 ? showItems(items) : noItemsMessage()} </div>\n        <div className=\"col-lg-6 col-md-6 col-sm-12\">\n          <h4 className=\"mb-3 scl jcol pt-3 pb-3 pr-3 pl-3 head1 text-center\">Your Cart Summary</h4>\n          <hr />\n\n          <Checkout services={items} setRun={setRun} run={run} />\n        </div>\n       \n      </div>\n    </Layout>\n     {/* <Footer/> */}\n     </div>\n  );\n};\n \nexport default Cart;","import React, { useState, useEffect } from 'react';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport { isAuthenticated } from '../auth/index';\n// eslint-disable-next-line\nimport { Link } from 'react-router-dom';\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin';\nimport moment from 'moment'\n\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setStatusValues] = useState([]);\n\n\n\n    const {user, token} = isAuthenticated()\n\n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if(data.error) {\n                console.log(data.error); \n            }else {\n                setOrders(data);\n            }\n        });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if(data.error) {\n                console.log(data.error); \n            }else {\n                setStatusValues(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadOrders()\n        loadStatusValues();\n    }, []);\n\n    const showOrdersLength = () => {\n        if(orders.length > 0) {\n        return (\n        <h3 className=\"scl\">Total orders: {orders.length}</h3>\n        )\n        } else {\n            return <h3 className=\"scl\">No orders</h3>\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n                <input type=\"text\" value={value} className=\"form-control\" readOnly />\n        </div>\n    );\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n            if(data.error) {\n                console.log('Status update failed')\n            } else {\n                loadOrders();\n            }\n        });\n    };\n\n    const showStatus = o => (\n        <div className=\"form-group\">\n            <h4 className=\"mark mb-4 scl\">Status: {o.status}</h4>\n            <select className=\"form-control\" onChange={e => (handleStatusChange(e, o._id))}>\n                <option>Update Status</option>\n                {statusValues.map((status, index) => (\n                <option key={index} value={status}>\n                    {status}\n                </option>\n                ))}\n            </select>\n        </div>\n    )\n\n    \n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-6 col-md-6 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n            <div className=\"col-md-12 offset-md-0\">\n                {showOrdersLength()}\n               \n                {orders.map((o, oIndex) => {\n                    return (\n                        <div className=\"mt-5\" key={oIndex} style={{borderBottom: \"5px solid black\"}}>\n                            <h4 className=\"mb-5\">\n                    {/* <span className=\"scl\">Order Id: {o._id}</span> */}\n                            </h4>\n\n                            <ul className=\"list-group mb-2\">\n                                <li className=\"list-group-item\">\n                                    {showStatus(o)}\n                                </li>\n                                <li className=\"list-group-item\">\n                                    Transaction ID: {o.transaction_id}\n                                </li>\n                                <li className=\"list-group-item\">\n                                    Amount: ${o.amount}\n                                </li>\n                                <li className=\"list-group-item\">\n                                    Oredered by: {o.user.name}\n                                </li>\n                                <li className=\"list-group-item\">\n                                    Ordered on: {moment(o.createdAt).fromNow()}\n                                </li>\n                                <li className=\"list-group-item\">\n                                    Delivery address: {o.address}\n                                </li>\n                            </ul>\n                            <h4 className=\"mt-4 mb-4 scl\">\n                                Total products in the order: {o.services.length} \n                            </h4>\n\n                            {o.services.map((s, sIndex) =>(\n                                <div className=\"mb-4\" key={sIndex} style={{padding: '20px', border: '1px solid black'}}>\n                                    {showInput('Products name', s.name)}\n                                    {showInput('Products price', s.price)}\n                                    {showInput('Products total', s.count)}\n                                    {showInput('Products Id', s._id)}\n                                </div>\n                            ))}\n                        </div>\n                    )\n                })}\n                 </div>\n            </div>\n\n        </LayoutAdmin>\n    );\n};\n\nexport default Orders;","\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\n// import { read } from '../core/apiCore';\nimport { read, update, updateUser } from './apiUser';\n\n\nconst Profile = ({match}) => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n    \n    const {token} = isAuthenticated()\n\n    const { name, email, password, error, success} = values\n\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n    // const init = userId => {\n    //     console.log(userId)\n        // read(userId, token).then(data => {\n        //     if(data.error) {\n        //         setValues({...values, error: true})\n        //     }else {\n        //         setValues({...values, name: data.name, email: data.email})\n        //     }\n        // })\n\n    // }\n\n    useEffect(() => {\n        init(match.params.userId)\n    }, [])\n\n\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/user/dashboard\" />;\n        }\n    };\n\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} placeholder=\"Change Your Username\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} placeholder=\"Change Your Email\"/>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} placeholder=\"Change Your Password\" />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btncl\">\n                Change\n            </button>\n        </form>\n    );\n\n    return (\n        \n            <Layout className=\"container mt-5 col-sm-6 col-md-6 col-lg-4 \">\n                <br/>\n                \n                   <div className=\"jumbotron bxs mt-5 pt-3 pb-3\">\n                   \n                   <h2 className=\"text-center mb-5 scl\">Update Your Profile</h2>\n                   {profileUpdate(name, email, password)}\n                   {redirectUser(success)}\n                   </div>\n                   \n            </Layout>\n       \n       );\n    \n};\n\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport LayoutAdmin from \"../core/LayoutAdmin\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getServices, deleteService } from \"./apiAdmin\";\n\nconst ManageServices = () => {\n    const [services, setServices] = useState([]);\n\n    const { user, token } = isAuthenticated();\n\n    const loadServices = () => {\n        getServices().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setServices(data);\n            }\n        });\n    };\n\n    const destroy = serviceId => {\n        deleteService(serviceId, user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                loadServices();\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadServices();\n    }, []);\n\n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-8 col-md-8 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-2 pr-0 pl-0 mt-5 jcol \">\n            <div className=\" col-lg-12 col-md-12\">\n                    <h4 className=\"text-center scl\">\n                         Products\n                    </h4>\n                    <hr />\n                    <ul className=\"list-group\">\n                        {services.map((s, i) => (\n                            <div \n                                key={i}\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\n                            >\n                                <strong className=\"col-lg-4 col-md-4 col-sm-4 scl\">{s.name}</strong>\n                                <Link to={`/admin/service/update/${s._id}`}>\n                                    {/* <div className=\"text-center\"> */}\n                                    <span className=\" clickmy col-lg-4 col-md-4 col-sm-4\">\n                                        Update\n                                    </span>\n                                    {/* </div> */}\n                                </Link>\n                                <Link>\n                                <span\n                                    onClick={() => destroy(s._id)}\n                                    className=\" col-lg-4 clickmy col-md-4 col-sm-4  pr-1 pl-1 \"\n                                >\n                                    Delete\n                                </span>\n                                </Link>\n                            </div>\n                        ))}\n                    </ul>\n                    <br />\n                </div>\n            </div>\n        </LayoutAdmin>\n    );\n};\n\nexport default ManageServices;","import React, { useState, useEffect } from 'react';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getService, getCategories, updateService } from './apiAdmin';\n\nconst UpdateService = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdService: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        quantity,\n        loading,\n        error,\n        createdService,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = serviceId => {\n        getService(serviceId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.serviceId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateService(match.params.serviceId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdService: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h2 className=\"text-center mb-3 scl\">Update Products</h2>\n            <hr/>\n            <h4 className=\"scl\">Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Type of Material</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn Instock\">Update Products</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-success\" style={{ display: createdService ? '' : 'none' }}>\n            <h2>{`${createdService}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-4 col-md-6 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n            <div className=\"col-md-12 offset-md-0\">\n                    {newPostForm()}\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {redirectUser()}\n\n                </div>\n            </div>\n        </LayoutAdmin>\n    );\n};\n\nexport default UpdateService;","import React, { useState, useEffect } from 'react';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getCategory, updateCategory } from './apiAdmin';\n// {category: [\"5cd0258f2793ec6e100bc191\"], price: []}\n// http://localhost:3000/admin/category/update/5cd0258f2793ec6e100bc191\nconst UpdateCategory = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        error: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    // destructure user and token from localStorage\n    const { user, token } = isAuthenticated();\n\n    const { name, error, redirectToProfile } = values;\n\n    const init = categoryId => {\n        getCategory(categoryId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.categoryId);\n    }, []);\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const submitCategoryForm = e => {\n        e.preventDefault();\n        // update with ? you should send category name otherwise what to update?\n        const category = {\n            name: name\n        };\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: data.name,\n                    error: false,\n                    redirectToProfile: true\n                });\n            }\n        });\n    };\n\n    const updateCategoryForm = () => (\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\n                <span className=\"txt1 p-b-11\">Category Name</span>\n                <br />\n                <br />\n                <div className=\"wrap-input100 validate-input m-b-36\">\n                    <input\n                        onChange={handleChange('name')}\n                        value={name}\n                        className=\"input100\"\n                        type=\"text\"\n                        required\n                        name=\"name\"\n                    />\n                </div>\n                <div className=\"w-size25\">\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\n                        Save Changes\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n\n    const showError = () => (\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {error}\n        </div>\n    );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/admin/categories\" />;\n            }\n        }\n    };\n\n    const goBackBTN = () => {\n        return (\n            <div className=\"mt-5\">\n                <Link to=\"/admin/categories\" className=\"text-info\">\n                    Back To Admin Home\n                </Link>\n            </div>\n        );\n    };\n\n    return (\n        <LayoutAdmin className=\"container mt-5 mb-5 col-lg-4 col-md-6 col-sm-12 \">\n        <br/>\n        <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n            <div className=\"col-md-12 offset-md-0\">\n                    {showError()}\n                    {updateCategoryForm()}\n                    {goBackBTN()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </LayoutAdmin>\n    );\n};\n\nexport default UpdateCategory;","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth/index';\n// eslint-disable-next-line\nimport { Link } from 'react-router-dom';\nimport { createDetail } from './apiUser';\nimport { getCategories } from '../admin/apiAdmin';\nimport { Redirect } from \"react-router-dom\";\n\n\n\nconst AddDetail = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        quantity: '',\n        photo: '',\n        categories: [],\n        category: '',\n        phone: '',\n        loading: false,\n        error: '',\n        createdDetail: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        quantity,\n        categories,\n        category,\n        phone,\n        loading,\n        error,\n        createdDetail,\n        // eslint-disable-next-line\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n        // eslint-disable-next-line\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createDetail(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    phone: '',\n                    categories: '',\n                    quantity: '',\n                    loading: false,\n                    createdDetail: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"\" onSubmit={clickSubmit}>\n            <h2 className=\"text-center mb-3 mb- scl\">Send Your Details</h2>\n            <hr/>\n            <h4 className=\"scl\">Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input  onChange={handleChange('photo')}  type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Name</label>\n                <input onChange={handleChange('name')}  type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Description</label>\n                <textarea  onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Phone</label>\n                <input onChange={handleChange('phone')} type=\"text\" className=\"form-control\" value={phone} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            {/* <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div> */}\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btncl\">Send Detail</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-success\" style={{ display: createdDetail ? '' : 'none' }}>\n            <h2>{`${createdDetail}`} data submitted!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n        const redirectDashboard = () => {\n            if (redirectToProfile) {\n                if (showSuccess === true) {\n                    return <Redirect to=\"/admin/dashboard\" />;\n                } else {\n                    return <Redirect to=\"/user/dashboard\"/>;\n                }\n            }\n            // if (isAuthenticated()) {\n            //     return <Redirect to=\"/\" />;\n            // }\n          };\n\n    return (\n        <Layout className=\"container mt-5 mb-5 col-lg-4 col-md-6 col-sm-12 \">\n            <br/>\n            <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n                <div className=\"col-md-12 offset-md-0\">\n                    \n                    {newPostForm()}\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {redirectDashboard()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddDetail;\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth/index';\n// eslint-disable-next-line\nimport { Link } from 'react-router-dom';\nimport { createContact } from './apiUser';\nimport { getContacts,getCategories } from '../admin/apiAdmin';\nimport { Redirect } from \"react-router-dom\";\n\n\n\nconst AddContact = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        text: '',\n        phone: '',\n        categories: [],\n        category: '',\n        loading: false,\n        error: '',\n        createdContact: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        text,\n        phone,\n        loading,\n        categories,\n        category,\n        error,\n        createdContact,\n        // eslint-disable-next-line\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getContacts().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    contacts: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n        // eslint-disable-next-line\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createContact(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    text:'',\n                    phone: '',\n                    categories: '',\n                    quantity: '',\n                    loading: false,\n                    createdContact: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"\" onSubmit={clickSubmit}>\n            {/* <h4>Post Photo</h4> */}\n            {/* <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input  onChange={handleChange('photo')}  type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div> */}\n\n            <div className=\"form-group\">\n            <h2 className=\"text-center mb-3 scl\">Contact Us</h2>\n            <hr/>\n                <label className=\"scl\">Name</label>\n                <input onChange={handleChange('name')}  type=\"text\" className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"scl\">Email</label>\n                <input onChange={handleChange('text')} type=\"text\" className=\"form-control\" value={text} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Description</label>\n                <textarea  onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"scl\">Phone</label>\n                <input onChange={handleChange('phone')} type=\"text\" className=\"form-control\" value={phone} />\n            </div>\n\n            {/* <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div> */}\n\n            {/* <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div> */}\n\n         \n\n            <button className=\"btn btncl\">Send</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-success\" style={{ display: createdContact ? '' : 'none' }}>\n            <h2> Message Send Successfully!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n        const redirectDashboard = () => {\n            if (redirectToProfile) {\n                if (showSuccess === true) {\n                    return <Redirect to=\"/admin/dashboard\" />;\n                } else {\n                    return <Redirect to=\"/user/dashboard\"/>;\n                }\n            }\n            // if (isAuthenticated()) {\n            //     return <Redirect to=\"/\" />;\n            // }\n          };\n\n    return (\n        <Layout className=\"container mt-5 mb-5 col-lg-4 col-md-6 col-sm-12\">\n            <br/>\n            <div className=\"row jumbotron pt-3 pr-2 pl-2 mt-5 jcol \">\n                <div className=\"col-md-12 offset-md-0\">\n                    \n                    {newPostForm()}\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {/* {redirectDashboard()} */}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddContact;\n\n\n\n\n\n\n\n","import React, {useState, useEffect} from 'react'\n\nimport LayoutAdmin from '../core/LayoutAdmin'\nimport {isAuthenticated} from '../auth'\nimport  { Link, Redirect } from 'react-router-dom'\nimport {getDetails, deleteDetail} from '../admin/apiAdmin'\n// import moment from \"moment\";\nimport Detail from '../core/Detail'\nimport ShowImage2 from '../core/ShowImage2';\nimport ShowImage from '../core/ShowImage';\nimport moment from 'moment';\n// import {  removeItem } from '../admin/apiAdmin';\nimport '../App.css';\n// import { isAuthenticated } from '../auth/index';\nimport { checkedItem } from '../core/apiCore';\n\n\nconst CreateDetails = (detail) => {\n// // eslint-disable-next-line\nconst {user: {_id, name, email, role, token}} = isAuthenticated()\n\n\n// const [redirect, setRedirect] = useState(false);\nconst [detailsByUsers, setDetailsByUsers] = useState([])\nconst [error, setError] = useState([])\n\n\n\nconst loadDetailsByUsers = () => {\n  getDetails('createdAt').then(data => {\n    if(data.error) {\n      setError(data.error)\n    }else {\n      setDetailsByUsers(data)\n      \n    }\n  })\n}\n\n\n\n\n\nuseEffect(() => {\n  loadDetailsByUsers()\n}, [])\n\n\n// const [redirect, setRedirect] = useState(false);\n//    const addToMessage = () => {\n//     checkedItem(detail, () => {\n//       setRedirect(true)\n//     })  \n//   }\n// const shouldRedirect = redirect => {\n//   if(redirect) {\n//     return <Redirect to=\"/admin/checkedDetails\"/>\n//   }\n// }\n\n\n\n\n\n  return (\n    <LayoutAdmin  className=\"container mb-5\" >\n    {/* <div className='row mt-5'>\n      <div className='col-3'>\n     \n      <div className=\"card mb-5 mt-5\">\n      <Link className=\"linkk\"  to=\"/admin/checkedDetails\"> <div className=\"scl jcol pt-3 pb-3 pr-3 pl-3  head1 text-center \"> <div className=\"linkk\">Checked details </div></div></Link>\n      </div>\n      \n      </div>\n      </div> */}\n<div> \n      <div className='col-12 container'>\n      {/* {adminInfo()} */}\n      {/* {detailsHistory()} */}\n      <div>\n        <h3 align=\"center\" className=\"textcenter mt-5 mb-5 scl\">Details by Users</h3>\n      {/* {JSON.stringify(detailsByUsers)} */}\n      </div>\n      <div className=\"\">\n                \n                {/* {detailsByUsers.map((detail, i) => (\n                    <div key={i} className=\"container\"> */}\n\n\n\n\n\n\n          <Detail      />\n\n                    </div>\n                {/* ))} */}\n                {/* <hr/> */}\n                {/* {loadMoreButton()} */}\n            </div>\n      </div>\n\n\n        {/* </div> */}\n\n\n    </LayoutAdmin>\n  )\n}\n\n\n\n// export default destroy;\n\nexport default CreateDetails;\n\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../App.css';\nimport { isAuthenticated } from '../auth/index';\nimport { getToChecked } from './apiCore';\nimport LayoutAdmin from '../core/LayoutAdmin';\nimport Detail from './Detail';\n\nconst {user, token} = isAuthenticated()\n\nconst CheckedDetails = ({\n  detail,\n  \n}) => {\n\n  const [items, setItems] = useState([]);\n\nuseEffect(() => {\n    setItems(getToChecked())\n}, [])\n\n\nconst showItems = items => {\n    return (\n        <div>\n    {items.map((detail,i) => (<Detail key={1} detail={detail} />))}\n\n        </div>\n    )\n\n}\nconst noItemsMessage = () => (\n    <div>\n      <h3 className=\"scl\">\n        No more checked details.<br/> \n    </h3>\n    <div className=\"jcol2 text-center scl\"><Link className=\"scl\" to=\"/admin/details\">Go and check</Link></div>\n    </div>\n)\n  return (\n      <LayoutAdmin className=\"mt-5 mb-5\">\n    <div className=\"container mt-5  mb-5\">\n    <div className=\"mt-5 mb-5 bpadd\">\n      <h3 className=\"scl text-center\">Checked Details</h3>\n    {items.length > 0 ? showItems(items) : noItemsMessage() }\n    </div>\n\n    </div>\n    </LayoutAdmin >\n  );\n};\n \nexport default CheckedDetails;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport '../App.css';\nimport { isAuthenticated } from '../auth/index';\n\n\n\n\nconst { user, token } = isAuthenticated()\n\nconst GetMessage = ({\n  contact,\n\n}) => {\n  // const [contact, setContact] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(contact.count);\n\n\n\n\n\n  return (\n    <div className=\"\">\n\n      <table className=\"table table-flui text-center table-hover table-responsiv table-sm table-bordered\">\n        <tr>\n          {/* <th className=\"scl\">Message Id</th> */}\n          <th className=\"scl\"  >Name</th>\n          <th className=\"scl\">Email</th>\n          <th className=\"scl\">Description</th>\n          <th className=\"scl\">PhoneNo</th>\n          <th className=\"scl\">Received At</th>\n        </tr>\n        {contact.map((c, cIndex) => (\n          \n          <tr>\n            <div key={cIndex}></div>\n          {/* <td>{contact._id}</td> */}\n          <td>{c.name}</td>\n          <td>{c.text}</td>\n          <td>{c.description.substring(0, 100)} </td>\n          <td>{c.phone}</td>\n          <td>{moment(c.createdAt).fromNow()}</td>\n        </tr>\n      \n        ))}\n        </table>\n    </div>\n\n  );\n};\n\nexport default GetMessage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {useState, useEffect} from 'react'\n\nimport LayoutAdmin from '../core/LayoutAdmin'\nimport {isAuthenticated} from '../auth'\nimport {Link} from 'react-router-dom'\nimport {getContacts} from '../admin/apiAdmin'\n// import moment from \"moment\";\nimport moment from 'moment';\nimport Contact from '../core/Contact'\nimport axios from 'axios'\n\n\n\nconst GetMessage = () => {\n// // eslint-disable-next-line\nconst {user: {_id, name, email, role, token}} = isAuthenticated()\n\n\nconst [contactsByUsers, setContactsByUsers] = useState([])\nconst [error, setError] = useState([])\n\n\n\nconst loadContactsByUsers = () => {\n  getContacts('createdAt').then(data => {\n    if(data.error) {\n      setError(data.error)\n    }else {\n      setContactsByUsers(data)\n    }\n  })\n}\n\n\nuseEffect(() => {\n  loadContactsByUsers()\n}, [])\n\n\n\n \n// constructor() {\n\n//   super() \n//   this.state = {\n//       data:[]\n//   }\n// }\n\n// componentDidMount() {\n//   axios.get('http://localhost:8000/form').then(res => {\n//       this.setState({\n//           data:res.data\n//       })\n//   })\n// }\n// return()\n// )}\n\n\n  return (\n    <LayoutAdmin  className=\"container mb-5\" >\n    <div className='row'>\n      <div className='container '>\n      <div className=\"textcenter mt-5 \">\n        <h3 align=\"center\" className=\"textcenter mb-5 scl\">Messages from users</h3>\n      </div>\n      <div className=\"\">\n                \n               \n          {/* <Contact\n            key={i}\n            contact={contact}\n          /> */}\n           <div className=\"\">\n\n<table  className=\"table table-hover table-responsiv table-sm table-bordered\">\n  <thead className=\"text-center\">\n   <tr>\n   <th className=\"scl\"  >Name</th>\n    <th className=\"scl\">Email</th>\n    <th className=\"scl\">Description</th>\n    <th className=\"scl\">PhoneNo</th>\n    <th className=\"scl\">Received At</th>\n   </tr>\n  </thead>    \n    <tbody>\n    \n  {contactsByUsers.map((contact) => (\n    <tr>\n      <td>{contact.name}</td>\n    <td>{contact.text}</td>\n    <td>{contact.description.substring(0, 100)} </td>\n    <td>{contact.phone}</td>\n    <td>{moment(contact.createdAt).fromNow()}</td>\n    </tr>\n  ))}\n  </tbody>\n\n  {/* ))} */}\n  </table>\n</div>\n\n\n                   \n            </div>\n      </div>\n\n\n        </div>\n\n\n    </LayoutAdmin>\n  )\n}\n\nexport default GetMessage;\n\n","import React from 'react';\nimport Layout from './Layout';\n\n\nconst thanksForthePayment = () => (\n    <Layout  className=\"container  mt-5 col-lg-3 col-md-3 col-sm-12\">\n    <br/>\n    <div className=\"row jumbotron text-center jcol mt-5\">\n      <div className=\"text-center\">\n      <h1 className=\"scl \">Payment Successful!</h1>\n      <img src=\"https://www.i-q.net.au/wp-content/uploads/success.png\" />\n      </div>\n     \n    </div>\n  </Layout>\n)\n\nexport default thanksForthePayment;","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Signup from './user/Signup';\nimport Signin from './user/Signin';\nimport Home from './core/Home';\nimport PrivateRoute from './auth/PrivateRoute';\nimport Dashboard from './user/UserDashboard';\nimport AdminRoute from './auth/AdminRoute';\nimport AdminDashboard from './user/AdminDashboard';\nimport AddCategory from './admin/AddCategory';\nimport AddService from './admin/AddService';\nimport Service from './core/Service';\nimport Cart from './core/Cart';\nimport Orders from './admin/Orders';\nimport Profile from './user/Profile';\nimport ManageServices from './admin/ManageServices';\nimport UpdateService from './admin/UpdateService';\nimport UpdateCategory from './admin/updateCategory';\nimport AddDetail from './user/AddDetail';\nimport AddContact from './user/AddContact';\nimport CreateDetails from './user/CreateDetails'\nimport CheckedDetails from './core/CheckedDetails'\nimport GetMessage from './user/GetMessage'\nimport thanksForthePayment from './core/thanksForthePayment'\n\n\n\n\n\n\n\n\n\n\n\n\nconst Routes = () => {\n    return (\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact  component={Home}/>\n            <Route path=\"/signin\" exact  component={Signin}/>\n            <Route path=\"/signup\" exact  component={Signup}/>\n            <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\n            <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\n            <AdminRoute path=\"/create/category\" exact component={AddCategory} />\n            <AdminRoute path=\"/create/service\" exact component={AddService} />\n            <Route path=\"/service/:serviceId\" exact  component={Service}/>\n            <Route path=\"/cart\" exact  component={Cart}/>\n            <AdminRoute path=\"/admin/orders\" exact component={Orders} />\n            <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\n            <AdminRoute path=\"/admin/services\" exact component={ManageServices} />\n            <AdminRoute path=\"/admin/service/update/:serviceId\" exact component={UpdateService} />\n            <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\n            <PrivateRoute path=\"/create/detail\" exact component={AddDetail} />\n            <PrivateRoute path=\"/create/contact\" exact component={AddContact} />\n            <AdminRoute path=\"/admin/details\" exact component={CreateDetails} />\n            <AdminRoute path=\"/admin/contacts\" exact component={GetMessage} />\n            <AdminRoute path=\"/admin/checkedDetails\" exact component={CheckedDetails} />\n            <PrivateRoute path=\"/thanksForthePayment\" exact component={thanksForthePayment} />\n\n        </Switch>\n    </BrowserRouter>\n    );\n};\nexport default Routes;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// import Routes from './Routes';\n\n\n// ReactDOM.render(\n//   <Routes />,\n//   document.getElementById('root')\n// );\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}